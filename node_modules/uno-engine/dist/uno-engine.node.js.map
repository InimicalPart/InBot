{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"shuffle\"","webpack:///external \"events\"","webpack:///./src/card/colors.ts","webpack:///./src/card/values.ts","webpack:///./src/card/card.ts","webpack:///./src/events/event.ts","webpack:///./src/events/game-events.ts","webpack:///./src/deck.ts","webpack:///./src/events/cancelable-emitter.ts","webpack:///./src/game-directions.ts","webpack:///./src/player.ts","webpack:///./src/game.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Colors","Values","Card","constructor","color","this","_value","_color","undefined","isWildCard","Error","WILD","WILD_DRAW_FOUR","isSpecialCard","DRAW_TWO","REVERSE","SKIP","matches","other","is","toString","defaults","isCancelable","Event","_type","_isCancelable","_canceled","type","options","assign","preventDefault","BeforeDrawEvent","player","quantity","super","DrawEvent","cards","BeforePassEvent","BeforeCardPlayEvent","card","CardPlayEvent","NextPlayerEvent","GameEndEvent","winner","score","createUnoDeck","deck","createCards","qty","push","apply","ZERO","ONE","NINE","Deck","shuffle","length","draw","num","concat","reset","CancelableEventEmitter","EventEmitter","on","eventName","listener","originalListener","context","event","canceled","emit","data","dispatchEvent","listeners","every","handler","GameDirections","Player","trim","getCardByValue","hand","find","hasCard","some","removeCard","findIndex","splice","valueOf","Game","playerNames","houseRules","_players","fixPlayers","forEach","rule","setup","newGame","drawPile","direction","CLOCKWISE","_discardedCard","min","max","_currentPlayer","Math","floor","random","getPlayer","getPlayerIndex","getNextPlayer","dir","COUNTER_CLOCKWISE","reverseGame","silent","arguments","drawnCards","privateDraw","drawn","yellers","pass","goToNextPlayer","play","currentPlayer","calculateScore","uno","yellingPlayer","drawingPlayers","filter","array","uniq","map","idx","count","reduce","a","b","keys","findDuplicates","playerName","indexOf","reverse","amount"],"mappings":"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","file":"uno-engine.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"shuffle\");","module.exports = require(\"events\");","export enum Colors {\n  RED = 1,\n  BLUE = 2,\n  GREEN = 3,\n  YELLOW = 4,\n}\n","export enum Values {\n  // numbers\n  ZERO = 0,\n  ONE = 1,\n  TWO = 2,\n  THREE = 3,\n  FOUR = 4,\n  FIVE = 5,\n  SIX = 6,\n  SEVEN = 7,\n  EIGHT = 8,\n  NINE = 9,\n  // special cards\n  DRAW_TWO = 10,\n  REVERSE = 11,\n  SKIP = 12,\n  WILD = 13,\n  WILD_DRAW_FOUR = 14,\n}\n","import { Colors } from './colors';\nimport { Values } from './values';\n\nexport class Card {\n  private _value: Values;\n  private _color: Colors | null;\n\n  constructor(value: Values, color?: Colors) {\n    this._value = value;\n    this._color = color === undefined ? undefined : color;\n\n    if (!this.isWildCard() && this.color === undefined) {\n      throw Error('Only wild cards can be initialized with no color');\n    }\n  }\n\n  get color() {\n    return this._color;\n  }\n\n  set color(color: Colors) {\n    if (!this.isWildCard())\n      throw new Error('Only wild cards can have theirs colors changed.');\n    else if (typeof color === 'undefined' || color < 1 || color > 4)\n      throw new Error('The color must be a value from Colors enum.');\n\n    this._color = color;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  isWildCard() {\n    return this.value === Values.WILD || this.value === Values.WILD_DRAW_FOUR;\n  }\n\n  isSpecialCard() {\n    return (\n      this.isWildCard() ||\n      this.value === Values.DRAW_TWO ||\n      this.value === Values.REVERSE ||\n      this.value === Values.SKIP\n    );\n  }\n\n  matches(other: Card) {\n    if (this.isWildCard()) return true;\n    else if (this.color === undefined || other.color === undefined)\n      throw new Error(\n        'Both cards must have theirs colors set before comparing',\n      );\n\n    return other.value === this.value || other.color === this.color;\n  }\n\n  get score() {\n    switch (this.value) {\n      case Values.DRAW_TWO:\n      case Values.SKIP:\n      case Values.REVERSE:\n        return 20;\n      case Values.WILD:\n      case Values.WILD_DRAW_FOUR:\n        return 50;\n      default:\n        return this.value;\n    }\n  }\n\n  is(value: Values, color?: Colors) {\n    let matches = this.value === value;\n    if (!!color) matches = matches && this.color === color;\n    return matches;\n  }\n\n  toString() {\n    return `${Colors[this.color] || 'NO_COLOR'} ${Values[this.value]}`;\n  }\n}\n","export interface EventOptions {\n  /**\n   * @default false\n   */\n  isCancelable: boolean;\n}\n\nconst defaults: EventOptions = {\n  isCancelable: true,\n};\n\nexport class Event {\n  private _type: string;\n  private _isCancelable: boolean;\n  private _canceled: boolean;\n\n  get type() {\n    return this._type;\n  }\n\n  get isCancelable() {\n    return this._isCancelable;\n  }\n\n  get canceled() {\n    return this._canceled;\n  }\n\n  constructor(type: string, options?: Partial<EventOptions>) {\n    if (!type) throw new Error('Event type is mandatory');\n\n    options = Object.assign({}, defaults, options) as EventOptions;\n\n    if (typeof options.isCancelable === 'undefined')\n      options.isCancelable = true;\n\n    this._type = type;\n    this._isCancelable = options.isCancelable;\n    this._canceled = false;\n  }\n\n  preventDefault() {\n    if (this.isCancelable) this._canceled = true;\n  }\n}\n","import { Card } from '../card';\nimport { Player } from '../player';\nimport { Event } from './event';\n\n/**\n * Fired when a player requests cards from the draw pile.\n */\nexport class BeforeDrawEvent extends Event {\n  /**\n   * @param {Player} player  thatThe player will draw\n   * @param {number} quantity The quantity of cards will be drawn\n   */\n  constructor(\n    public readonly player: Player,\n    public readonly quantity: number,\n  ) {\n    super('beforedraw');\n  }\n}\n\n/**\n * Fired after player's drawn cards are added to his hands.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {Player} player The player that has drawn\n   * @param {Card[]} cards The cards that were drawn\n   */\n  constructor(public readonly player: Player, public readonly cards: Card[]) {\n    super('draw');\n  }\n}\n\n/**\n * Fired when a player can pass and requests to pass its turn.\n */\nexport class BeforePassEvent extends Event {\n  /**\n   * @param {Player} player The player that will pass\n   */\n  constructor(public readonly player: Player) {\n    super('beforepass');\n  }\n}\n\n/**\n * Fired before player discards a card in the discard pile.\n */\nexport class BeforeCardPlayEvent extends Event {\n  /**\n   * @param {Card} card The card that will be played\n   * @param {Player} player The player that will play\n   */\n  constructor(public readonly card: Card, public readonly player: Player) {\n    super('beforecardplay');\n  }\n}\n\n/**\n * Fired after player's card is thrown in the discard pile.\n */\nexport class CardPlayEvent extends Event {\n  /**\n   * @param {Card} card The card that was played\n   * @param {Player} player The player that played\n   */\n  constructor(public readonly card: Card, public readonly player: Player) {\n    super('cardplay');\n  }\n}\n\n/**\n * Fired when {@link game#currentPlayer | currentPlayer} changes.\n */\nexport class NextPlayerEvent extends Event {\n  /**\n   * @param {Player} player The new player\n   */\n  constructor(public readonly player: Player) {\n    super('nextplayer');\n  }\n}\n\n/**\n * Fired when `winner` has 0 cards at hand.\n */\nexport class GameEndEvent extends Event {\n  /**\n   * @param {Player} winner The big winner\n   * @param {number} score Player's final score\n   */\n  constructor(public readonly winner: Player, public readonly score: number) {\n    super('end', {\n      isCancelable: false,\n    });\n  }\n}\n","import { shuffle } from 'shuffle';\nimport { Card, Colors, Values } from './card';\n\nfunction createUnoDeck() {\n  /*\n    108 cards\n\n    76x numbers (0-9, all colors)\n    8x draw two (2x each color)\n    8x reverse (2x each color)\n    8x skip (2x each color)\n    4x wild\n    4x wild draw four\n  */\n\n  const deck: Card[] = [];\n\n  const createCards = (qty: number, value: Values, color?: Colors) => {\n    const cards = [];\n\n    for (let i = 0; i < qty; i++) cards.push(new Card(value, color));\n\n    return cards;\n  };\n\n  // for each color...\n  for (let color = 1; color <= 4; color++) {\n    // CREATE NUMBERS\n    deck.push.apply(deck, createCards(1, Values.ZERO, color));\n    for (let n = Values.ONE; n <= Values.NINE; n++) {\n      deck.push.apply(deck, createCards(2, n, color));\n    }\n\n    deck.push.apply(deck, createCards(2, Values.DRAW_TWO, color));\n    deck.push.apply(deck, createCards(2, Values.SKIP, color));\n    deck.push.apply(deck, createCards(2, Values.REVERSE, color));\n  }\n\n  deck.push.apply(deck, createCards(4, Values.WILD));\n  deck.push.apply(deck, createCards(4, Values.WILD_DRAW_FOUR));\n\n  return deck;\n}\n\nexport class Deck {\n  private originalDraw: Function;\n  private shuffle = shuffle({ deck: createUnoDeck() });\n\n  get cards() {\n    return this.shuffle.cards;\n  }\n\n  get length() {\n    return this.shuffle.length;\n  }\n\n  constructor() {}\n\n  draw(num?: number) {\n    num = num || 1;\n    let cards: Card[] = [];\n\n    // if the amount to draw is more than the cards we have...\n    if (num >= this.length) {\n      const length = this.length;\n\n      // draw all we have...\n      cards = cards.concat(this.shuffle.draw.call(this, length));\n\n      // regenerate the draw pile\n      this.shuffle.reset();\n      this.shuffle.shuffle();\n\n      // then draw the rest we need\n      num = num - length;\n      if (num === 0) return cards;\n    }\n\n    return cards.concat(this.shuffle.draw(num));\n  }\n}\n","import { EventEmitter } from 'events';\nimport { Event } from './event';\n\nfunction createProxyListener(originalListener: Function, context: any) {\n  return function(event: Event) {\n    const returnValue = originalListener.call(context, event);\n    const shouldContinue = returnValue !== false;\n\n    if (!shouldContinue) event.preventDefault();\n\n    // console.log(\"cancel?\", !shouldContinue);\n    return !event.canceled;\n  };\n}\n\nexport class CancelableEventEmitter extends EventEmitter {\n  on(eventName: string, listener: Function) {\n    return super.on(eventName, createProxyListener(listener, this));\n  }\n\n  emit(type: string, data?: any): boolean {\n    throw new Error('Event dispatching must be done via #dispatchEvent');\n  }\n\n  /**\n   * @param {Event} event\n   */\n  dispatchEvent(event: Event) {\n    return this.listeners(event.type).every((handler: Function) =>\n      handler(event),\n    );\n  }\n}\n","export enum GameDirections {\n  CLOCKWISE = 1,\n  COUNTER_CLOCKWISE = 2,\n}\n","import { Card, Values } from './card';\n\nexport class Player {\n  name: string;\n  hand: Card[] = [];\n\n  constructor(name: string) {\n    name = !!name ? name.trim() : name;\n    if (!name) throw new Error('Player must have a name');\n\n    this.name = name;\n  }\n\n  getCardByValue(value: Values) {\n    if (!value) return undefined;\n\n    return this.hand.find(c => c.value === value);\n  }\n\n  hasCard(card: Card) {\n    if (!card) return false;\n\n    return this.hand.some(\n      c => c.value === card.value && c.color === card.color,\n    );\n  }\n\n  removeCard(card: Card) {\n    if (!this.hasCard(card)) return;\n\n    const i = this.hand.findIndex(\n      c => c.value === card.value && c.color === card.color,\n    );\n    this.hand.splice(i, 1);\n  }\n\n  valueOf() {\n    return this.name;\n  }\n\n  toString() {\n    return this.name;\n  }\n}\n","import { Card, Values } from './card';\nimport { Deck } from './deck';\nimport {\n  BeforeCardPlayEvent,\n  BeforeDrawEvent,\n  BeforePassEvent,\n  CancelableEventEmitter,\n  CardPlayEvent,\n  DrawEvent,\n  GameEndEvent,\n  NextPlayerEvent,\n} from './events';\nimport { GameDirections } from './game-directions';\nimport { Player } from './player';\n\nconst CARDS_PER_PLAYER = 7;\n\nexport class Game extends CancelableEventEmitter {\n  // events:\n  /**\n   * @event Game#beforedraw\n   * @type {BeforeDrawEvent}\n   */\n  /**\n   * @event Game#draw\n   * @type {DrawEvent}\n   */\n  /**\n   * @event Game#beforepass\n   * @type {BeforePassEvent}\n   */\n  /**\n   * @event Game#beforecardplay\n   * @type {BeforeCardPlayEvent}\n   */\n  /**\n   * @event Game#cardplay\n   * @type {CardPlayEvent}\n   */\n  /**\n   * @event Game#nextplayer\n   * @type {NextPlayerEvent}\n   */\n  /**\n   * @event Game#end\n   * @type {GameEndEvent}\n   */\n\n  private drawPile: Deck;\n  private direction: GameDirections;\n  private _currentPlayer: Player;\n  private _players: Player[] = [];\n  private _discardedCard: Card;\n\n  // control vars\n  /**\n   * The player have draw in his turn?\n   */\n  private drawn = false;\n  /**\n   * Who yelled uno?\n   *\n   * key: player name\n   * value: true/false\n   */\n  private yellers: { [key: string]: boolean } = {};\n\n  constructor(playerNames: string[], houseRules: { setup: Function }[] = []) {\n    super();\n\n    this._players = this.fixPlayers(playerNames);\n    houseRules.forEach(rule => rule.setup(this));\n    this.newGame();\n  }\n\n  newGame() {\n    this.drawPile = new Deck();\n    this.direction = GameDirections.CLOCKWISE;\n\n    this._players.forEach(p => (p.hand = this.drawPile.draw(CARDS_PER_PLAYER)));\n\n    // do not start with special cards (REVERSE, DRAW, etc)\n    do {\n      this._discardedCard = this.drawPile.draw()[0];\n    } while (this._discardedCard.isSpecialCard());\n\n    // select starting player\n    this._currentPlayer = this._players[\n      getRandomInt(0, this._players.length - 1)\n    ];\n  }\n\n  getPlayer(name: string) {\n    const player: Player = this._players[this.getPlayerIndex(name)];\n    if (!player) return undefined;\n    return player;\n  }\n\n  get currentPlayer(): Player {\n    return this._currentPlayer;\n  }\n\n  set currentPlayer(player: Player) {\n    player = this.getPlayer(player.name);\n    if (!player) throw new Error('The given player does not exist');\n\n    this._currentPlayer = player;\n  }\n\n  get nextPlayer() {\n    return this.getNextPlayer();\n  }\n\n  get discardedCard() {\n    return this._discardedCard;\n  }\n\n  set discardedCard(card: Card) {\n    if (!card) return;\n    if (card.color === undefined || card.color === null)\n      throw new Error('Discarded cards cannot have theirs colors as null');\n\n    this._discardedCard = card;\n  }\n\n  get players() {\n    return this._players;\n  }\n\n  get deck() {\n    return this.drawPile;\n  }\n\n  get playingDirection() {\n    return this.direction;\n  }\n\n  set playingDirection(dir: GameDirections) {\n    if (\n      dir !== GameDirections.CLOCKWISE &&\n      dir != GameDirections.COUNTER_CLOCKWISE\n    )\n      throw new Error('Invalid direction');\n\n    if (dir !== this.direction) this.reverseGame();\n  }\n\n  /**\n   * @fires Game#beforedraw\n   * @fires Game#draw\n   */\n  public draw(player?: Player, qty?: number, { silent } = { silent: false }) {\n    if (arguments.length == 0) player = this._currentPlayer;\n\n    qty = qty || 1;\n\n    if (!silent && !this.dispatchEvent(new BeforeDrawEvent(player, qty)))\n      return;\n\n    const drawnCards = this.privateDraw(player, qty);\n\n    if (!silent && !this.dispatchEvent(new DrawEvent(player, drawnCards)))\n      return;\n\n    this.drawn = true;\n    // reset UNO! yell state\n    this.yellers[player.name] = false;\n  }\n\n  /**\n   * @fires Game#beforepass\n   * @fires Game#nextplayer\n   */\n  pass() {\n    if (!this.drawn)\n      throw new Error(\n        `${this._currentPlayer} must draw at least one card before passing`,\n      );\n\n    if (!this.dispatchEvent(new BeforePassEvent(this._currentPlayer))) return;\n    this.goToNextPlayer();\n  }\n\n  /**\n   * @fires Game#beforecardplay\n   * @fires Game#cardplay\n   * @fires Game#nextplayer\n   * @fires Game#end\n   */\n  play(card: Card, { silent } = { silent: false }) {\n    const currentPlayer = this._currentPlayer;\n    if (!card) return;\n    // check if player has the card at hand...\n    if (!currentPlayer.hasCard(card))\n      throw new Error(`${currentPlayer} does not have card ${card} at hand`);\n\n    if (\n      !silent &&\n      !this.dispatchEvent(new BeforeCardPlayEvent(card, this._currentPlayer))\n    )\n      return;\n\n    if (card.color == undefined)\n      throw new Error('Card must have its color set before playing');\n    // check if the played card matches the card from the discard pile...\n    if (!card.matches(this._discardedCard))\n      throw new Error(\n        `${this._discardedCard}, from discard pile, does not match ${card}`,\n      );\n\n    currentPlayer.removeCard(card);\n    this._discardedCard = card;\n\n    if (\n      !silent &&\n      !this.dispatchEvent(new CardPlayEvent(card, this._currentPlayer))\n    )\n      return;\n\n    if (currentPlayer.hand.length == 0) {\n      const score = this.calculateScore();\n      // game is over, we have a winner!\n      this.dispatchEvent(new GameEndEvent(this._currentPlayer, score));\n      // TODO: how to stop game after it's finished? Finished variable? >.<\n      return;\n    }\n\n    switch (this._discardedCard.value) {\n      case Values.WILD_DRAW_FOUR:\n        this.privateDraw(this.getNextPlayer(), 4);\n        this.goToNextPlayer(true);\n        break;\n      case Values.DRAW_TWO:\n        this.privateDraw(this.getNextPlayer(), 2);\n        this.goToNextPlayer(true);\n        break;\n      case Values.SKIP:\n        this.goToNextPlayer(true);\n        break;\n      case Values.REVERSE:\n        this.reverseGame();\n        if (this._players.length == 2)\n          // Reverse works like Skip\n          this.goToNextPlayer(true);\n        break;\n    }\n\n    this.goToNextPlayer();\n  }\n\n  uno(yellingPlayer?: Player) {\n    yellingPlayer = yellingPlayer || this._currentPlayer;\n\n    // the users that will draw;\n    let drawingPlayers;\n\n    // if player is the one who has 1 card, just mark as yelled\n    // (he may yell UNO! before throwing his card, so he may have\n    // 2 cards at hand when yelling uno)\n    if (yellingPlayer.hand.length <= 2 && !this.yellers[yellingPlayer.name]) {\n      this.yellers[yellingPlayer.name] = true;\n      return [];\n    } else {\n      // else if the user has already yelled or if he has more than 2 cards...\n\n      // is there anyone with 1 card at hand that did not yell uno?\n      drawingPlayers = this._players.filter(\n        p => p.hand.length == 1 && !this.yellers[p.name],\n      );\n\n      // if there isn't anyone...\n      if (drawingPlayers.length == 0) {\n        // the player was lying, so he will draw\n        drawingPlayers = [yellingPlayer];\n      }\n    }\n\n    drawingPlayers.forEach(p => this.privateDraw(p, 2));\n\n    // return who drawn\n    return drawingPlayers;\n  }\n\n  fixPlayers(playerNames: string[]) {\n    if (\n      !playerNames ||\n      !playerNames.length ||\n      playerNames.length < 2 ||\n      playerNames.length > 10\n    )\n      throw new Error('There must be 2 to 10 players in the game');\n    else if (findDuplicates(playerNames).length)\n      throw new Error('Player names must be different');\n\n    return playerNames.map(player => {\n      return new Player(player);\n    });\n  }\n\n  getNextPlayer() {\n    let idx = this.getPlayerIndex(this._currentPlayer);\n\n    if (++idx == this._players.length) idx = 0;\n\n    return this._players[idx];\n  }\n\n  getPlayerIndex(playerName: string | Player) {\n    if (typeof playerName !== 'string') playerName = playerName.name;\n\n    return this._players.map(p => p.name).indexOf(playerName);\n  }\n\n  /**\n   * Set current player to the next in the line,\n   * with no validations, reseting all per-turn controllers\n   * (`draw`, ...)\n   *\n   * @fires Game#nextplayer\n   */\n  goToNextPlayer(silent?: boolean) {\n    this.drawn = false;\n\n    this._currentPlayer = this.getNextPlayer();\n    if (!silent) this.dispatchEvent(new NextPlayerEvent(this._currentPlayer));\n  }\n\n  reverseGame() {\n    this._players.reverse();\n    this.direction =\n      this.direction == GameDirections.CLOCKWISE\n        ? GameDirections.COUNTER_CLOCKWISE\n        : GameDirections.CLOCKWISE;\n  }\n\n  /**\n   * Add the given amount of cards to the given player's hand\n   * from the draw pile.\n   *\n   * @param player the player to deliver the cards\n   * @param amount the amount that must be drawn\n   * @returns the drawn cards\n   */\n  private privateDraw(player: Player, amount: number): Card[] {\n    if (!player) throw new Error('Player is mandatory');\n\n    // console.log(`draw ${amount} to ${player}`);\n\n    const cards = this.drawPile.draw(amount);\n\n    player.hand = player.hand.concat(cards);\n    return cards;\n  }\n\n  calculateScore() {\n    return this._players.map(player => player.hand).reduce((amount, cards) => {\n      amount += cards.reduce((s: number, c: Card) => (s += c.score), 0);\n      return amount;\n    }, 0);\n  }\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// https://stackoverflow.com/a/24968449/1574059\nfunction findDuplicates(array: string[]) {\n  type SingleWord = { count: number; name: string };\n  type WordCount = { [key: string]: number };\n\n  // expects an string array\n  const uniq: WordCount = array\n    .map((name, idx) => {\n      return { count: 1, name: name };\n    })\n    .reduce((a: WordCount, b: SingleWord) => {\n      a[b.name] = (a[b.name] || 0) + b.count;\n      return a;\n    }, {});\n\n  const duplicates = Object.keys(uniq).filter(a => uniq[a] > 1);\n\n  return duplicates;\n}\n\nfunction isObject(val: any) {\n  return val !== null && typeof val === 'object';\n}\n"],"sourceRoot":""}